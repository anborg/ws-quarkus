app:
  configBasePath: /Volumes/data01/projects/zorg/on-stove/ws-quarkus/config
quarkus:
  package:
    type: uber-jar
  log:
    level: INFO
    file:
      enable: true
      async: true
      path: ./logs/cisapi.log
      format: "%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n"
    console:
      format: "%d{HH:mm:ss} %-5p [%c{2.}] (%t) %s%e%n"
    # Configure a named handler that logs to file
    handler:
      file:
        "STRUCTURED_LOGGING_FILE":
          enable: true
          format: "%e%n"
      console:
        "STRUCTURED_LOGGING":
          format: "%e%n"
  category: # Configure the category and link the named handlers to it
    "io.quarkus.category":
      level: INFO
      handlers:
          STRUCTURED_LOGGING,STRUCTURED_LOGGING_FILE
    "org.hibernate":
      level: DEBUG
      handlers:
        STRUCTURED_LOGGING

  swagger-ui:
    always-include: true
  datasource:
    #datasource-cis: #named datasource - not working if it is single ds
    db-kind: oracle
    username: integ
    password: integ123
    jdbc:
      url: jdbc:oracle:thin:@localhost:1531/xe
      max-size: 8
  hibernate-orm:
    #datasource-cis:
    #datasource: "datasource-cis" # defined above
    packages: package model
    database:
      default-schema: integ
      generation: validate # none, create, drop-and-create, drop, update, validate
    log:
      sql: true
    sql-load-script: import.sql
  http:
#    port: 8080
#    insecure-requests: disabled
    ssl-port: 8043
    ssl:
      certificate:
        file: ${app.configBasePath}/cert.pem #server certificate or certificate chain in PEM format.
        key-file: ${app.configBasePath}/key.pem #ertificate private key file in PEM format.
#        key-store-file: ${app.configBasePath}/keystore.jks
#        key-store-password: password
    auth:
      basic: true
  ssl:
    native: true

"%test":
  quarkus:
    datasource:
      #datasource-cis: #named datasource - not working if it is single ds
      db-kind: h2
      username: sa
      password:
      jdbc:
        url: jdbc:h2:mem:myDB;DB_CLOSE_DELAY=-1;MODE=Oracle;INIT=CREATE SCHEMA IF NOT EXISTS integ
        max-size: 8
    hibernate-orm:
      sql-load-script: ${app.configBasePath}/../sql/cis/schema_ddl.sql
      #datasource-cis:
      #datasource: "datasource-cis" # defined above
      packages: package model
      database:
        default-schema: integ
        generation: drop-and-create # none, create, drop-and-create, drop, update, validate

# Let's make sure we don't wipe the production data by accident!
"%prod":
  quarkus:
   hibernate-orm:
    sql-load-script: no-file
    database:
      generation: none
